<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addProducts.warning" xml:space="preserve">
    <value>Terminez l'ajout des articles en cliquant l'un des boutons avant d'utiliser la recherche dynamique pour éviter de perdre les articles dans le deuxième tableau.</value>
  </data>
  <data name="addProducts.warningAlert" xml:space="preserve">
    <value>Veuillez d'abord ajouter les articles sélectionnés.</value>
  </data>
  <data name="modal.btnContinue" xml:space="preserve">
    <value>Continuer</value>
  </data>
  <data name="modal.Sentence" xml:space="preserve">
    <value>Vous n'avez pas enregistré vos modifications. Que voulez-vous faire de vos prévisions ?</value>
  </data>
  <data name="monthpicker.from" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="monthpicker.header" xml:space="preserve">
    <value>Sélectionnez la période de prévision</value>
  </data>
  <data name="monthpicker.monthList" xml:space="preserve">
    <value>Janv,Fev,Mars, Avr,Mai,Juin, Juil,Aout,Sept,Oct,Nov,Dec</value>
  </data>
  <data name="monthpicker.nc" xml:space="preserve">
    <value>Campagne suivante</value>
  </data>
  <data name="monthpicker.oc" xml:space="preserve">
    <value>Campagne en cours</value>
  </data>
  <data name="monthpicker.to" xml:space="preserve">
    <value>À</value>
  </data>
  <data name="navigation.backBtn" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="page.addArticlesMsg" xml:space="preserve">
    <value>Aucun article n'est associé au client selectionné.Veuillez cliquer sur le bouton en bas à droite pour ajouter des articles.</value>
  </data>
  <data name="page.cancelbtn" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="page.confirmAllBtn" xml:space="preserve">
    <value>Tout valider</value>
  </data>
  <data name="page.confirmbtn" xml:space="preserve">
    <value>Valider</value>
  </data>
  <data name="page.noResults" xml:space="preserve">
    <value>Aucun résultat</value>
  </data>
  <data name="page.prefCustomers" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="page.prefProducts" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="page.salesperson" xml:space="preserve">
    <value>Commercial</value>
  </data>
  <data name="page.selectedPeriod" xml:space="preserve">
    <value>Période sélectionnée</value>
  </data>
  <data name="page.submitbtn" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="pagination.nbCustomers" xml:space="preserve">
    <value>Nombre de clients</value>
  </data>
  <data name="pagination.nbProducts" xml:space="preserve">
    <value>Nombre d'articles</value>
  </data>
  <data name="pagination.page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="productsPage.btnAddProducts" xml:space="preserve">
    <value>Ajouter des articles</value>
  </data>
  <data name="productsPage.company" xml:space="preserve">
    <value>Société</value>
  </data>
  <data name="productsPage.companyBtnGoBack" xml:space="preserve">
    <value>Ajouter et retourner à la page précédente</value>
  </data>
  <data name="productsPage.companyBtnStay" xml:space="preserve">
    <value>Ajouter et rester sur la page actuelle</value>
  </data>
  <data name="productsPage.customer" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="search.byCode" xml:space="preserve">
    <value>Chercher par code...</value>
  </data>
  <data name="search.byDescription" xml:space="preserve">
    <value>Chercher par description...</value>
  </data>
  <data name="search.byName" xml:space="preserve">
    <value>Chercher par nom...</value>
  </data>
  <data name="subtable.delivered" xml:space="preserve">
    <value>Livrés</value>
  </data>
  <data name="subtable.forecasts" xml:space="preserve">
    <value>Prévisions</value>
  </data>
  <data name="subtable.portfolios" xml:space="preserve">
    <value>Portefeuilles</value>
  </data>
  <data name="subtable.Price" xml:space="preserve">
    <value>Tarif</value>
  </data>
  <data name="subtable.Pricing" xml:space="preserve">
    <value>Valorisation</value>
  </data>
  <data name="tableC.actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="tableC.allSalespeople" xml:space="preserve">
    <value>Tous les commerciaux</value>
  </data>
  <data name="tableC.daysAgo" xml:space="preserve">
    <value>j</value>
  </data>
  <data name="tableC.headerCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="tableC.headerCustomers" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="tableC.headerName" xml:space="preserve">
    <value>Nom client</value>
  </data>
  <data name="tableC.headerSalespeople" xml:space="preserve">
    <value>Commerciaux</value>
  </data>
  <data name="tableC.headerSalespersonName" xml:space="preserve">
    <value>Nom du commercial</value>
  </data>
  <data name="tableC.headerSortStatus" xml:space="preserve">
    <value>Tous les statuts</value>
  </data>
  <data name="tableC.headerStatus" xml:space="preserve">
    <value>Statut</value>
  </data>
  <data name="tableC.headerStatusMade" xml:space="preserve">
    <value>Effectué_3</value>
  </data>
  <data name="tableC.headerStatusMake" xml:space="preserve">
    <value>À faire_2</value>
  </data>
  <data name="tableC.headerStatusNew" xml:space="preserve">
    <value>Nouveau_1</value>
  </data>
  <data name="tableC.today" xml:space="preserve">
    <value>aujourd'hui</value>
  </data>
  <data name="tableP.headerLastUpdate" xml:space="preserve">
    <value>Dernière modification</value>
  </data>
  <data name="tableP.headerProductCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="tableP.headerProductDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="tableP.headerProductUnit" xml:space="preserve">
    <value>Unité</value>
  </data>
  <data name="tableRow.Noforecasts" xml:space="preserve">
    <value>Pas de prévisions</value>
  </data>
</root>